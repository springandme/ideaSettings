<application>
  <component name="AppStorage">
    <histories>
      <item value="coordinate" />
      <item value="coordinator" />
      <item value="协调" />
      <item value="Edition" />
      <item value="The number of acknowledgments the producer requires the leader to have received before considering a request complete. This controls the &quot; + &quot; durability of records that are sent. The following settings are common: &quot; + &quot; &lt;ul&gt;&quot; + &quot; &lt;li&gt;&lt;code&gt;acks=0&lt;/code&gt; If set to zero then the producer will not wait for any acknowledgment from the&quot; + &quot; server at all. The record will be immediately added to the socket buffer and considered sent. No guarantee can be&quot; + &quot; made that the server has received the record in this case, and the &lt;code&gt;retries&lt;/code&gt; configuration will not&quot; + &quot; take effect (as the client won't generally know of any failures). The offset given back for each record will&quot; + &quot; always be set to -1.&quot; + &quot; &lt;li&gt;&lt;code&gt;acks=1&lt;/code&gt; This will mean the leader will write the record to its local log but will respond&quot; + &quot; without awaiting full acknowledgement from all followers. In this case should the leader fail immediately after&quot; + &quot; acknowledging the record but before the followers have replicated it then the record will be lost.&quot; + &quot; &lt;li&gt;&lt;code&gt;acks=all&lt;/code&gt; This means the leader will wait for the full set of in-sync replicas to&quot; + &quot; acknowledge the record. This guarantees that the record will not be lost as long as at least one in-sync replica&quot; + &quot; remains alive. This is the strongest available guarantee." />
      <item value="Accumulator" />
      <item value="Unreachable statement" />
      <item value="Variable 'running' is not updated inside loop" />
      <item value="More arguments provided (5) than placeholders specified (0)" />
      <item value="&gt;This form avoids superfluous string concatenation when the logger * is disabled for the INFO level. However, this variant incurs the hidden * (and relatively small) cost of creating an &lt;code&gt;Object[]&lt;/code&gt; before invoking the method, * even if this logger is disabled for INFO. The variants taking * {@link #info(String, Object) one} and {@link #info(String, Object, Object) two} * arguments exist solely in order to avoid this hidden cost.&lt;/p&gt;" />
      <item value="Log a message at the INFO level according to the specified format * and arguments." />
      <item value="生产者" />
      <item value="endpoints" />
      <item value="epoch" />
      <item value="The znode will be deleted upon the client's disconnect." />
      <item value="force" />
      <item value="滴滴答答的响" />
      <item value="tick" />
      <item value="tick time" />
      <item value="ticktime" />
      <item value="lag" />
      <item value="retention" />
      <item value="Byzantine" />
      <item value="metadata Future" />
      <item value="ZooKeeper" />
      <item value="Fetch" />
      <item value="Election" />
      <item value="Configure logging for testing: optionally with log file" />
      <item value="Infinity" />
      <item value="divisor / dividend': integer division in floating-point context" />
      <item value="除法" />
      <item value="被除数" />
      <item value="除数" />
      <item value="处说" />
      <item value="计算" />
      <item value="Replication" />
      <item value=" There is insufficient memory for the Java Runtime Environment to continue. # Native memory allocation (mmap) failed to map 1073741824 bytes for committing reserved memory. # An error report file with more information is saved as:" />
      <item value="The checksum (CRC32) of the record." />
      <item value="delivery  guarantee" />
      <item value="guarantee" />
      <item value="delivery " />
      <item value="delivery guarantee" />
      <item value="centric " />
      <item value="The metadata for a record that has been acknowledged by the server" />
      <item value="A {@code Future} represents the result of an asynchronous * computation. Methods are provided to check if the computation is * complete, to wait for its completion, and to retrieve the result of * the computation. The result can only be retrieved using method * {@code get} when the computation has completed, blocking if * necessary until it is ready. Cancellation is performed by the * {@code cancel} method. Additional methods are provided to * determine if the task completed normally or was cancelled. Once a * computation has completed, the computation cannot be cancelled. * If you would like to use a {@code Future} for the sake * of cancellability but not provide a usable result, you can * declare types of the form {@code Future&lt;?&gt;} and * return {@code null} as a result of the underlying task." />
      <item value="Asynchronously send a record to a topic. Equivalent to &lt;code&gt;send(record, null)&lt;/code&gt;." />
      <item value="The interval at which log segments are checked to see if they can be deleted according to the retention policies" />
      <item value="If log.cleaner.enable=true is set the cleaner will be enabled and individual logs can then be marked for log compaction." />
      <item value="The maximum size of a log segment file. When this size is reached a new log segment will be created." />
      <item value="The minimum age of a log file to be eligible for deletion" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="755" />
        <entry key="ENGLISH" value="755" />
        <entry key="ARABIC" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="LATIN" value="2" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="10" />
        <entry key="SWEDISH" value="2" />
        <entry key="WELSH" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="phoneticFontFamily" value="Consolas" />
    <option name="primaryFontFamily" value="Consolas" />
  </component>
</application>