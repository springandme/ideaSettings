<application>
  <component name="AppStorage">
    <histories>
      <item value="注解" />
      <item value="Facade" />
      <item value="Raw use of parameterized class 'List'" />
      <item value="操作成功" />
      <item value="操作" />
      <item value="FastJsonConfig' is already defined in this compilation unit" />
      <item value="converter" />
      <item value="Could not write JSON: Can not write a string, expecting field name (context: Object); nested exception is com.fasterxml.jackson.core.JsonGenerationException: Can not write a string, expecting field name (context: Object)" />
      <item value="* Method for outputting a String value. Depending on context * this means either array element, (object) field value or * a stand alone String; but in all cases, String will be * surrounded in double quotes, and contents will be properly * escaped as required by JSON specification." />
      <item value="Method that can be used to specify serializer to use for serializing * all non-null JSON property names, unless more specific key serializer * is found (i.e. if not custom key serializer has been registered for * Java type)." />
      <item value="which gets called once per each" />
      <item value="Note that you can get finer control over serializer to use by overriding" />
      <item value="Method that can be used to specify serializer that will be * used to write JSON values matching Java null values * instead of default one (which simply writes JSON null)." />
      <item value="Accessor for the &quot;blueprint&quot; (or, factory) instance, from which instances * are created by calling {@link DefaultSerializerProvider#createInstance}. * Note that returned instance cannot be directly used as it is not properly * configured: to get a properly configured instance to call, use * {@link #getSerializerProviderInstance()} instead." />
      <item value="action" />
      <item value="爱好" />
      <item value="coordinate" />
      <item value="coordinator" />
      <item value="协调" />
      <item value="Edition" />
      <item value="The number of acknowledgments the producer requires the leader to have received before considering a request complete. This controls the &quot; + &quot; durability of records that are sent. The following settings are common: &quot; + &quot; &lt;ul&gt;&quot; + &quot; &lt;li&gt;&lt;code&gt;acks=0&lt;/code&gt; If set to zero then the producer will not wait for any acknowledgment from the&quot; + &quot; server at all. The record will be immediately added to the socket buffer and considered sent. No guarantee can be&quot; + &quot; made that the server has received the record in this case, and the &lt;code&gt;retries&lt;/code&gt; configuration will not&quot; + &quot; take effect (as the client won't generally know of any failures). The offset given back for each record will&quot; + &quot; always be set to -1.&quot; + &quot; &lt;li&gt;&lt;code&gt;acks=1&lt;/code&gt; This will mean the leader will write the record to its local log but will respond&quot; + &quot; without awaiting full acknowledgement from all followers. In this case should the leader fail immediately after&quot; + &quot; acknowledging the record but before the followers have replicated it then the record will be lost.&quot; + &quot; &lt;li&gt;&lt;code&gt;acks=all&lt;/code&gt; This means the leader will wait for the full set of in-sync replicas to&quot; + &quot; acknowledge the record. This guarantees that the record will not be lost as long as at least one in-sync replica&quot; + &quot; remains alive. This is the strongest available guarantee." />
      <item value="Accumulator" />
      <item value="Unreachable statement" />
      <item value="Variable 'running' is not updated inside loop" />
      <item value="More arguments provided (5) than placeholders specified (0)" />
      <item value="&gt;This form avoids superfluous string concatenation when the logger * is disabled for the INFO level. However, this variant incurs the hidden * (and relatively small) cost of creating an &lt;code&gt;Object[]&lt;/code&gt; before invoking the method, * even if this logger is disabled for INFO. The variants taking * {@link #info(String, Object) one} and {@link #info(String, Object, Object) two} * arguments exist solely in order to avoid this hidden cost.&lt;/p&gt;" />
      <item value="Log a message at the INFO level according to the specified format * and arguments." />
      <item value="生产者" />
      <item value="endpoints" />
      <item value="epoch" />
      <item value="The znode will be deleted upon the client's disconnect." />
      <item value="force" />
      <item value="滴滴答答的响" />
      <item value="tick" />
      <item value="tick time" />
      <item value="ticktime" />
      <item value="lag" />
      <item value="retention" />
      <item value="Byzantine" />
      <item value="metadata Future" />
      <item value="ZooKeeper" />
      <item value="Fetch" />
      <item value="Election" />
      <item value="Configure logging for testing: optionally with log file" />
      <item value="Infinity" />
      <item value="divisor / dividend': integer division in floating-point context" />
      <item value="除法" />
      <item value="被除数" />
      <item value="除数" />
      <item value="处说" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="764" />
        <entry key="ENGLISH" value="765" />
        <entry key="ARABIC" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="LATIN" value="2" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="10" />
        <entry key="SWEDISH" value="2" />
        <entry key="WELSH" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="phoneticFontFamily" value="Consolas" />
    <option name="primaryFontFamily" value="Consolas" />
  </component>
</application>