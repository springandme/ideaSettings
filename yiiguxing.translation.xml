<application>
  <component name="AppStorage">
    <histories>
      <item value="lag" />
      <item value="retention" />
      <item value="Byzantine" />
      <item value="metadata Future" />
      <item value="ZooKeeper" />
      <item value="Fetch" />
      <item value="Election" />
      <item value="Configure logging for testing: optionally with log file" />
      <item value="Infinity" />
      <item value="divisor / dividend': integer division in floating-point context" />
      <item value="除法" />
      <item value="被除数" />
      <item value="除数" />
      <item value="处说" />
      <item value="计算" />
      <item value="Replication" />
      <item value=" There is insufficient memory for the Java Runtime Environment to continue. # Native memory allocation (mmap) failed to map 1073741824 bytes for committing reserved memory. # An error report file with more information is saved as:" />
      <item value="The checksum (CRC32) of the record." />
      <item value="delivery  guarantee" />
      <item value="guarantee" />
      <item value="delivery " />
      <item value="delivery guarantee" />
      <item value="centric " />
      <item value="The metadata for a record that has been acknowledged by the server" />
      <item value="A {@code Future} represents the result of an asynchronous * computation. Methods are provided to check if the computation is * complete, to wait for its completion, and to retrieve the result of * the computation. The result can only be retrieved using method * {@code get} when the computation has completed, blocking if * necessary until it is ready. Cancellation is performed by the * {@code cancel} method. Additional methods are provided to * determine if the task completed normally or was cancelled. Once a * computation has completed, the computation cannot be cancelled. * If you would like to use a {@code Future} for the sake * of cancellability but not provide a usable result, you can * declare types of the form {@code Future&lt;?&gt;} and * return {@code null} as a result of the underlying task." />
      <item value="Asynchronously send a record to a topic. Equivalent to &lt;code&gt;send(record, null)&lt;/code&gt;." />
      <item value="The interval at which log segments are checked to see if they can be deleted according to the retention policies" />
      <item value="If log.cleaner.enable=true is set the cleaner will be enabled and individual logs can then be marked for log compaction." />
      <item value="The maximum size of a log segment file. When this size is reached a new log segment will be created." />
      <item value="The minimum age of a log file to be eligible for deletion" />
      <item value="rebalance" />
      <item value="List all topic meta information. Here -1 indicates that the result is not available or is empty." />
      <item value="partition" />
      <item value=" Select kafka topic, then edit the simulation message, and then click send to produce the message." />
      <item value="Mock " />
      <item value=" Made up of letters and digits or underscores . Such as &quot;demo_kafka_topic_1&quot; ." />
      <item value=" Display system resource module, you can add, modify and delete it." />
      <item value="alarm" />
      <item value="segment" />
      <item value="broker" />
      <item value="消费者" />
      <item value="polling" />
      <item value="sensor" />
      <item value="base" />
      <item value="basic" />
      <item value="Complete output mode not supported when there are no streaming aggregations on streaming DataFrames/Datasets;;" />
      <item value="Cannot resolve overloaded method 'updateStateByKey" />
      <item value="Unused expression without side effects" />
      <item value="Raw use of parameterized class 'KafkaTemplate'" />
      <item value=" Due to limitations in metric names, topics with a period ('.') or underscore ('_') could collide. To avoid issues it is best to use either, but not both" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="749" />
        <entry key="ENGLISH" value="750" />
        <entry key="ARABIC" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="LATIN" value="2" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="10" />
        <entry key="SWEDISH" value="2" />
        <entry key="WELSH" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="phoneticFontFamily" value="Consolas" />
    <option name="primaryFontFamily" value="Consolas" />
  </component>
</application>