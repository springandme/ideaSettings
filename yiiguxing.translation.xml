<application>
  <component name="AppStorage">
    <histories>
      <item value="Pruning" />
      <item value="Catalyst" />
      <item value="Unable to generate an encoder for inner class `com.hliushi.spark.sql.Intro$Person` without access to the scope that this class was defined in. * Try moving this class out of its parent class.;" />
      <item value="generate" />
      <item value="Unable to generate an encoder for inner class `com.hliushi.spark.sql.Intro$Person` without access to the scope that this class was defined in." />
      <item value="Intro" />
      <item value="shark" />
      <item value="backend" />
      <item value="broadcast" />
      <item value="This is a plugin for Excel file. You can read the file content in IDEA. Don't need to open excel application. Three formats of [xls, xlsx, csv] are supported." />
      <item value="accumulator" />
      <item value="accumulate" />
      <item value="factor" />
      <item value="launch" />
      <item value="Narrow" />
      <item value="Represents a one-to-one dependency between ranges of partitions in the parent and child RDDs." />
      <item value="narrow Dependency" />
      <item value="Child returned status 1" />
      <item value="is not a valid DFS filename." />
      <item value="Spark monitoring connection" />
      <item value="Exception during driver request: java.lang.IllegalArgumentException: java.net.URISyntaxException: Illegal character in hostname at index 10: hdfs://ecs_node01:8020" />
      <item value="compute" />
      <item value="计算机" />
      <item value="Traversable Once" />
      <item value="Class of the key associated with the inputFormatClass." />
      <item value="drive" />
      <item value="Driver" />
      <item value="driver" />
      <item value="daemon" />
      <item value="宕机" />
      <item value="临时" />
      <item value="tmp" />
      <item value="interim" />
      <item value="Rainbow" />
      <item value="Rainbow Csv " />
      <item value="deserialized" />
      <item value="Reassignment" />
      <item value="persist" />
      <item value="ascending" />
      <item value="equals Ignore Case" />
      <item value="source" />
      <item value="Comparing unrelated types: Char and String" />
      <item value="stage" />
      <item value="模型" />
      <item value="numeric" />
      <item value="numberic" />
      <item value="mean" />
      <item value="champion" />
      <item value="Aggregate the elements of each partition, and then the results for all the partitions, using a * given associative function and a neutral &quot;zero value&quot;. The function * op(t1, t2) is allowed to modify t1 and return it as its result value to avoid object * allocation; however, it should not modify t2. * * This behaves somewhat differently from fold operations implemented for non-distributed * collections in functional languages like Scala. This fold operation may be applied to * partitions individually, and then fold those results into the final result, rather than * apply the fold to each element sequentially in some defined ordering. For functions * that are not commutative, the result may differ from that of a fold applied to a * non-distributed collection." />
      <item value="the initial value for the accumulated result of each partition for the `op` * operator, and also the initial value for the combine results from different * partitions for the `op` operator - this will typically be the neutral * element (e.g. `Nil` for list concatenation or `0` for summation)" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="335" />
        <entry key="ENGLISH" value="335" />
        <entry key="ARABIC" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="LATIN" value="2" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="JAPANESE" value="10" />
        <entry key="WELSH" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="phoneticFontFamily" value="Consolas" />
    <option name="primaryFontFamily" value="Consolas" />
  </component>
</application>