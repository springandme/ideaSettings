<application>
  <component name="AppStorage">
    <histories>
      <item value="ascending" />
      <item value="equals Ignore Case" />
      <item value="source" />
      <item value="Comparing unrelated types: Char and String" />
      <item value="stage" />
      <item value="模型" />
      <item value="numeric" />
      <item value="numberic" />
      <item value="mean" />
      <item value="champion" />
      <item value="Aggregate the elements of each partition, and then the results for all the partitions, using a * given associative function and a neutral &quot;zero value&quot;. The function * op(t1, t2) is allowed to modify t1 and return it as its result value to avoid object * allocation; however, it should not modify t2. * * This behaves somewhat differently from fold operations implemented for non-distributed * collections in functional languages like Scala. This fold operation may be applied to * partitions individually, and then fold those results into the final result, rather than * apply the fold to each element sequentially in some defined ordering. For functions * that are not commutative, the result may differ from that of a fold applied to a * non-distributed collection." />
      <item value="the initial value for the accumulated result of each partition for the `op` * operator, and also the initial value for the combine results from different * partitions for the `op` operator - this will typically be the neutral * element (e.g. `Nil` for list concatenation or `0` for summation)" />
      <item value="Merge the values for each key using an associative and commutative reduce function. This will * also perform the merging locally on each mapper before sending results to a reducer, similarly * to a &quot;combiner&quot; in MapReduce. Output will be hash-partitioned with numPartitions partitions." />
      <item value="Closing link tag before opening" />
      <item value="persist" />
      <item value="Implemented by subclasses to return how this RDD depends on parent RDDs. This method will only * be called once, so it is safe to implement a time-consuming computation in it." />
      <item value="ctag" />
      <item value="Return the Cartesian product of this RDD and another one, that is, the RDD of all pairs of * elements (a, b) where a is in `this` and b is in `other`." />
      <item value="转换" />
      <item value="操作" />
      <item value="option" />
      <item value="seqOp" />
      <item value="fold" />
      <item value="super" />
      <item value="sub" />
      <item value="subtract" />
      <item value="fraction" />
      <item value="preserves" />
      <item value="coalesce" />
      <item value="Coalescer" />
      <item value="repartition" />
      <item value="zero Value" />
      <item value="aggregate" />
      <item value="Combiner" />
      <item value="Cominer" />
      <item value="use `.distinct()` to eliminate them" />
      <item value="Return the union of this RDD and another one. Any identical elements will appear multiple * times (use `.distinct()` to eliminate them)." />
      <item value="with Replacement" />
      <item value="Return a new RDD by applying a function to each partition of this RDD, while tracking the index * of the original partition." />
      <item value="Return a new RDD by applying a function to each partition of this RDD, while tracking the index * of the original partition. * * `preservesPartitioning` indicates whether the input function preserves the partitioner, which * should be `false` unless this is a pair RDD and the input function doesn't modify the keys." />
      <item value="Attempting port" />
      <item value="preserves Partitioning" />
      <item value="paste" />
      <item value="var could be a val" />
      <item value="gradient" />
      <item value="dataset" />
      <item value="数据集" />
      <item value="resilient" />
      <item value="rdd" />
      <item value="Name boolean parameters" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="322" />
        <entry key="ENGLISH" value="323" />
        <entry key="ARABIC" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="LATIN" value="2" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="JAPANESE" value="10" />
        <entry key="WELSH" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="phoneticFontFamily" value="Consolas" />
    <option name="primaryFontFamily" value="Consolas" />
  </component>
</application>