<application>
  <component name="AppStorage">
    <histories>
      <item value="Error:(99, 15) reference to write is ambiguous; it is both defined in object ShcUtils and imported subsequently by  import org.json4s.jackson.Serialization.write     val str = write(obj)" />
      <item value="Unexpected custom file format" />
      <item value="profile" />
      <item value="separator" />
      <item value="sperator" />
      <item value="GrepConsole plugin: processing took too long, aborting to prevent GUI freezing. Consider changing following settings: 'Match only first N characters on each line' or 'Max processing time for a line' Last expression: [pattern='.*FATAL.*', unlessPattern='null']" />
      <item value="已经存在了" />
      <item value="This release is only for system testing against Spark 2.2." />
      <item value="frequency" />
      <item value="Do a dryrun before submitting the job" />
      <item value="Added a key not lexically larger than previous" />
      <item value="Output the RDD to any Hadoop-supported file system, using a new Hadoop API `OutputFormat` * (mapreduce.OutputFormat) object supporting the key and value types K and V in this RDD." />
      <item value="Get all parameters as a list of pairs" />
      <item value="Create a SparkConf that loads defaults from system properties and the classpath" />
      <item value="入口" />
      <item value="口入" />
      <item value="Create a SparkConf that loads defaults from system properties and the classpath */" />
      <item value="Create a ImmutableBytesWritable using the byte array as the initial value." />
      <item value="A context object that allows input and output from the task. It is only * supplied to the {@link Mapper} or {@link Reducer}." />
      <item value="&lt;p&gt;&lt;code&gt;WritableComparable&lt;/code&gt;s can be compared to each other, typically * via &lt;code&gt;Comparator&lt;/code&gt;s. Any type which is to be used as a * &lt;code&gt;key&lt;/code&gt; in the Hadoop Map-Reduce framework should implement this * interface.&lt;/p&gt;" />
      <item value="Used to perform Put operations for a single row." />
      <item value="Extends the base &lt;code&gt;Mapper&lt;/code&gt; class to add the required input key * and value classes." />
      <item value="Returns the value of a given fieldName. * For primitive types if value is null it returns 'zero value' specific for primitive * ie. 0 for Int - use isNullAt to ensure that value is not null" />
      <item value="expired" />
      <item value="Unpacking necessary files from: file://D:/hadoop_cluster/vagrant_test_cluster1/pkgs/package.box" />
      <item value="Box file was not detected as metadata. Adding it directly..." />
      <item value="Attempting to find and install..." />
      <item value="amount" />
      <item value="amout" />
      <item value="personas" />
      <item value="prfile" />
      <item value="recursive value dataFrame needs type" />
      <item value="Returns the value at position i as a primitive int." />
      <item value="分隔符" />
      <item value="boot" />
      <item value="* This method serializes the specified object into its equivalent representation as a tree of" />
      <item value="duration" />
      <item value="Comparing unrelated types: Long and Null" />
      <item value="Either" />
      <item value="Returns a new Dataset that has exactly `numPartitions` partitions, when the fewer partitions * are requested. If a larger number of partitions is requested, it will stay at the current * number of partitions. Similar to coalesce defined on an `RDD`, this operation results in * a narrow dependency, e.g. if you go from 1000 partitions to 100 partitions, there will not * be a shuffle, instead each of the 100 new partitions will claim 10 of the current partitions. * * However, if you're doing a drastic coalesce, e.g. to numPartitions = 1, * this may result in your computation taking place on fewer nodes than * you like (e.g. one node in the case of numPartitions = 1). To avoid this, * you can call repartition. This will add a shuffle step, but means the * current upstream partitions will be executed in parallel (per whatever * the current partitioning is)." />
      <item value="Checks whether the value at position i is null" />
      <item value="分析" />
      <item value="vote" />
      <item value="打分" />
      <item value="分数" />
      <item value="appraise" />
      <item value="evaluate" />
      <item value="assess" />
      <item value="评价" />
      <item value="Comparing unrelated types: Double and Null" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="638" />
        <entry key="ENGLISH" value="638" />
        <entry key="ARABIC" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="LATIN" value="2" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="10" />
        <entry key="SWEDISH" value="1" />
        <entry key="WELSH" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="phoneticFontFamily" value="Consolas" />
    <option name="primaryFontFamily" value="Consolas" />
  </component>
</application>